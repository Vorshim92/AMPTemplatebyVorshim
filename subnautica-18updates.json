[
  {
    "UpdateStageName": "Ensure base + XDG dirs (Linux)",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "Executable",
    "UpdateSourceData": "/bin/bash",
    "UpdateSourceArgs": "-lc \"set -e; mkdir -p '{{$FullBaseDir}}/nitrox' '{{$FullBaseDir}}/dotnet' '{{$FullBaseDir}}/home' '{{$FullBaseDir}}/.config' '{{$FullBaseDir}}/.local/share' '{{$FullBaseDir}}/.cache'\""
  },
  {
    "UpdateStageName": "Fetch dotnet-install.sh",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "FetchURL",
    "UpdateSourceData": "https://dot.net/v1/dotnet-install.sh",
    "UpdateSourceTarget": "{{$FullBaseDir}}/dotnet",
    "UpdateSourceArgs": "{{$FullBaseDir}}/dotnet/dotnet-install.sh",
    "OverwriteExistingFiles": true
  },
  {
    "UpdateStageName": "Install .NET 9 runtime (user-local)",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "Executable",
    "UpdateSourceData": "/bin/bash",
    "UpdateSourceArgs": "-lc \"chmod +x '{{$FullBaseDir}}/dotnet/dotnet-install.sh' && '{{$FullBaseDir}}/dotnet/dotnet-install.sh' --channel 9.0 --runtime dotnet --install-dir '{{$FullBaseDir}}/dotnet' --no-path\""
  },
  {
    "UpdateStageName": "Nitrox â€“ Latest Linux (auto)",
    "UpdateStageDescription": "Downloads the latest Nitrox Linux release automatically",
    "UpdateSourcePlatform": 2,
    "UpdateSource": 2048,
    "UpdateSourceArch": 3,
    "UpdateSourceData": "cd {{$FullBaseDir}} && mkdir -p nitrox && cd nitrox && curl -sL https://api.github.com/repos/SubnauticaNitrox/Nitrox/releases/latest | grep -oP 'https://[^\"]+Nitrox_[0-9.]+_linux_x64\\.zip' | head -1 | xargs -I {} sh -c 'curl -fL --retry 3 -o nitrox.zip \"{}\" && unzip -o nitrox.zip && rm nitrox.zip && chmod +x NitroxServer'",
    "UpdateSourceArgs": null,
    "ForceDownloadPlatform": 2
  },
  {
    "UpdateStageName": "Make executable (robusto)",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "Executable",
    "UpdateSourceData": "/bin/sh",
    "UpdateSourceArgs": "-lc \"p='{{$FullBaseDir}}/nitrox/linux-x64/NitroxServer-Subnautica'; [ -f \\\"$p\\\" ] && chmod +x \\\"$p\\\" || { echo 'not found'; exit 1; }\""
  },
  {
    "UpdateStageName": "Write run-nitrox.sh",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "Executable",
    "UpdateSourceData": "/bin/bash",
    "UpdateSourceArgs": "-lc \"cat > '{{$FullBaseDir}}/run-nitrox.sh' << 'EOF'\n#!/usr/bin/env bash\nset -euo pipefail\nBASE='{{$FullBaseDir}}'\n# .NET locale\nexport DOTNET_ROOT=\"$BASE/dotnet\"\nexport PATH=\"$DOTNET_ROOT:$PATH\"\n# XDG/HOME per i config\nexport HOME=\"$BASE/home\"\nexport XDG_CONFIG_HOME=\"$BASE/.config\"\nexport XDG_DATA_HOME=\"$BASE/.local/share\"\nexport XDG_CACHE_HOME=\"$BASE/.cache\"\n# ðŸ‘‰ Path ai file di Subnautica (scaricati in $BASE/game)\nexport SUBNAUTICA_INSTALLATION_PATH=\"$BASE/game\"\n# Avvio\ncd \"$BASE/nitrox/linux-x64\"\nexec \"$BASE/nitrox/linux-x64/NitroxServer-Subnautica\" \"$@\"\nEOF\n\""
  },
  {
    "UpdateStageName": "chmod run-nitrox.sh (robusto)",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "Executable",
    "UpdateSourceData": "/bin/sh",
    "UpdateSourceArgs": "-lc \"chmod +x '{{$FullBaseDir}}/run-nitrox.sh'\""
  },
  {
    "UpdateStageName": "Create game dir",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "Executable",
    "UpdateSourceData": "/bin/sh",
    "UpdateSourceArgs": "-lc \"mkdir -p '{{$FullBaseDir}}/game'\""
  },
  {
    "UpdateStageName": "Download Subnautica (SteamCMD, Windows)",
    "UpdateSourcePlatform": "Linux",
    "UpdateSource": "SteamCMD",
    "UpdateSourceData": "264710",
    "UpdateSourceTarget": "{{$FullBaseDir}}/game",
    "ForceDownloadPlatform": "Windows",
    "UpdateSourceVersion": "public",
    "OneShot": true,
    "UpdateSourceConditionSetting": "UseSteamCMD",
    "UpdateSourceConditionValue": "true"
  }
]
